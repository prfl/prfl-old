@using Models
@using Models.IP
@inject HttpClient client

  
  <div class="my-3 p-3 rounded shadow" style="background-color: @BackgroundColor !important;">
    <div class="row">
      <div class="col-1">
        <a href="@ApplicationLink"><img src="@LogoLink" height="26px" width="26px"></a>
      </div>
      <div class="col-9 mt-1 ml-3">
          <a href="@UserLink"><strong class="d-block" style="color: @TextColor !important;">@Username</strong></a>
      </div>
      <div class="col-1 pt-1">
          @if(IsFavorite == true) {
          <img class="float-right" src="/assets/icons/star-fill.svg" height="20px" width="20px"/>
        }
      </div>
    </div>
  </div>




@code {
  [Parameter] public string UserLink { get; set; }
  [Parameter] public string BackgroundColor { get; set; }
  [Parameter] public string ApplicationLink {get; set; }
  [Parameter] public string Username { get; set; }
  [Parameter] public string TextColor { get; set; }
  [Parameter] public string LogoLink { get; set; }
  [Parameter] public bool IsFavorite { get; set; }
  [Parameter] public string UserId { get; set; }
  [Parameter] public string LinkId { get; set; }
  [Parameter] public LinkType Type { get; set; }
  public GeoIP GeoIP { get; set; }

  private async Task AddClick(string userId, string linkId) {
    GeoIP = await client.GetFromJsonAsync<GeoIP>("https://json.geoiplookup.io/");
    
    if(GeoIP != null) {
      await client.PostAsJsonAsync($"https://prfl-analytics.azurewebsites.net/api/clicks", CreateClick(userId, linkId));
    }
  }

  private Click CreateClick(string userId, string linkId) {
    var click = new Click(){
        ClickDateTime = DateTime.Now,
        UserId = userId,
        LinkId = linkId,
        Type = Type,
        PublicIP = GeoIP.IP,
        CountryCode = GeoIP.Country_Code,
        CountryName = GeoIP.Country_Name,
        Region = GeoIP.Region,
        District = GeoIP.District,
        Longitude = GeoIP.Longitude,
        Latitude = GeoIP.Latitude
      };

      return click;
  }

}