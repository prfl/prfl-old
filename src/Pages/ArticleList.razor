@page "/ar/{username}"
@using Models
@using Profile.Components
@inject Services.StateContainer StateContainer
@inject HttpClient client

<Title Value="@username" />

@if(Articles == null) {
    <Loading />
}
else if(Articles.Length == 0) {
    <div class="alert alert-info mt-3" role="alert">
        The user does not have any articles yet.
    </div>
}

else {
    @foreach(var article in Articles) {
        var modalId = GetModalId();
        <div>
            <LinkCard   ModalId="@modalId" 
                        Url="@article.Url" 
                        Name="@article.Name" 
                        Description="@article.Description" 
                        IsFavorite="@article.IsFavorite" 
                        IconUrl="/assets/icons/article.svg"
                        UserId="@User.UserId"
                        LinkId="@article.ArticleId"
                        Group="@LinkType.Project"/>
        </div>
        
    }
}

 



@code {
    [Parameter] public string username { get; set; }
    private Article[] Articles { get; set; }
    private User User { get; set; }

    private int Count = 1;

    protected override async Task OnInitializedAsync() {
        ChangePropertyValue();
        ChangeIconValue();
        Articles = await client.GetFromJsonAsync<Article[]>($"api/article/u/{username}");
        User = await client.GetFromJsonAsync<User>($"api/user/u/{username}");
        StateContainer.OnChange += StateHasChanged;
    }

    private void ChangePropertyValue()
    {
        StateContainer.SetProperty(username);
    }

    private void ChangeIconValue()
    {
        StateContainer.SetAccountIcon("/assets/icons/account.svg");
        StateContainer.SetLinkIcon("/assets/icons/link-fill-ns.svg");
        StateContainer.SetFavoriteIcon("/assets/icons/star.svg");
        StateContainer.SetProjectIcon("/assets/icons/kanban.svg");
        StateContainer.SetVideoIcon("/assets/icons/video.svg");
    }

    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }

    private string GetModalId()
    {
        var num = Count++;
        return "modal" + num;
    }
}